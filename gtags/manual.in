#
# Copyright (c) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005
#	2007, 2008, 2009, 2010 Tama Communications Corporation
#
# This file is part of GNU GLOBAL.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This file is converted to the following files:
#	o command source file(for usage and help).
#	o man format reference manual.
#	o texinfo format reference manual.
#
@HEADER	GTAGS,1,March 2010,GNU Project
@NAME	gtags - create tag files for global.
@SYNOPSIS
	@name{gtags} [-ciIOqvw][-d @arg{tag-file}][-f @arg{file}][@arg{dbpath}]
@DESCRIPTION
	@name{Gtags} is used to create tag files for @xref{global,1}.

	@name{Gtags} recursively collects source files under the current directory,
	pickup symbols and write the cross-reference data into the tag files
	(@file{GTAGS}, @file{GRTAGS} and @file{GPATH}).

	If @file{gtags.files} exists or the @option{-f} option is specified,
	target files are limited by it. Lines starting with ". " are comments.

	C, C++, yacc, java, PHP and Assembly source files are supported.
	Files whose names end in @file{.c} or @file{.h} are assumed to be
	C source files.
	Files whose names end in @file{.c++} @file{.cc} @file{.cpp} @file{.cxx}
	@file{.hxx} @file{.hpp} @file{.C} @file{.H} are assumed to be C++ source files.
	Files whose names end in @file{.y} are assumed to be YACC source files.
	Files whose names end in @file{.java} are assumed to be Java source files.
	Files whose names end in @file{.php} @file{.php3} @file{.phtml} are
	assumed to be PHP source files.
	Files whose names end in @file{.s} or @file{.S}
	are assumed to be Assembly source files.
	Other files are assumed to be text files.
@OPTIONS
	The following options are available:
	@begin_itemize
	@item{@option{-c}, @option{--compact}}
		Make GTAGS in compact format.
		This option does not influence GRTAGS,
		because they are always made in compact format.
	@item{@option{--config}[=@arg{name}]}
		Print the value of config variable @arg{name}.
		If @arg{name} is not specified then print all names and values.
	@item{@option{-d}, @option{--dump} @arg{tag-file}}
		Dump a tag file. The output format is 'key<tab>data'.
		This is for debugging.
	@item{@option{-f}, @option{--file} @arg{file}}
		Browse through all source files whose names are listed in @arg{file}.
		The argument @arg{file} can  be set to @file{-} to accept a list of
		files from the standard input.
		File names must be separated by newline.
	@item{@option{--gtagsconf} @arg{file}}
		Set the @var{GTAGSCONF} environment variable to @arg{file}.
	@item{@option{--gtagslabel} @arg{label}}
		Set the @var{GTAGSLABEL} environment variable to @arg{label}.
	@item{@option{-I}, @option{--idutils}}
		Also make the ID database file for @xref{idutils,1}.
	@item{@option{-i}, @option{--incremental}}
		Update tag files incrementally. You had better use
		@xref{global,1} with the -u option.
	@item{@option{-O}, @option{--objdir}}
		Use BSD-style objdir as the location of tag files.
		If @file{$MAKEOBJDIRPREFIX} directory exists, @name{gtags} creates
		@file{$MAKEOBJDIRPREFIX/<current directory>} directory and makes
		tag files in it.
		If @arg{dbpath} is specified, this option is ignored.
	@item{@option{--single-update} @arg{file}}
		Update tag files for single file.
		It is considered that @arg{file} was updated, and other files were not
		updated.  The @arg{file} must be relative path name from the current directory.
		This option implies the -i option.
		If the @arg{file} is new then @option{--single-update} is ignored,
		and the processing is automatically switched to normal incremental updating.
	@item{@option{--statistics}}
		Print statistics information.
		This option is valid only for normal creation of tag files.
	@item{@option{-q}, @option{--quiet}}
		Quiet mode.
	@item{@option{-v}, @option{--verbose}}
		Verbose mode.
	@item{@option{-w}, @option{--warning}}
		Print warning messages.
	@item{@arg{dbpath}}
		The directory in which tag files are generated.
		The default is the current directory.
	@end_itemize
@EXAMPLES
	@begin_verbatim
	$ ls -F
	Makefile      src/    lib/
	$ gtags -v
	$ global -x main
	main              10 src/main.c  main (argc, argv) {
	@end_verbatim
@FILES
	@begin_itemize
	@item{@file{GTAGS}}
		Tag file for object definitions.
	@item{@file{GRTAGS}}
		Tag file for object references.
	@item{@file{GPATH}}
		Tag file for path of source files.
	@item{@file{$HOME/.globalrc}, @file{/etc/gtags.conf}, @file{[sysconfdir]/gtags.conf}}
		Configuration files.
	@item{@file{gtags.files}}
		The list of candidates of target files.
	@end_itemize
@ENVIRONMENT
	The following environment variables affect the execution of @name{gtags}:
	@begin_itemize
	@item{@var{TMPDIR}}
		The location used to stored temporary files. The default is @file{/tmp}.
	@item{@var{GTAGSCONF}}
		Configuration file. The default is @file{$HOME/.globalrc}.
	@item{@var{GTAGSLABEL}}
		Configuration label. The default is @arg{default}.
	@item{@var{GTAGSCACHE}}
		The size of B-tree cache. The default is 50000000 (bytes).
	@item{@var{GTAGSFORCECPP}}
		If this variable is set, each file whose suffix is 'h' is treated
		as a C++ source file.
	@item{@var{MAKEOBJDIRPREFIX}}
		If this variable is set, @file{$MAKEOBJDIRPREFIX} is used as the prefix
		of BSD-style objdir. The default is @file{/usr/obj}.
	@end_itemize
@CONFIGURATION
	The following configuration variables affect the execution of @name{gtags}.
	You can see the default value for each variable with the @option{--config} option.
	@begin_itemize
	@item{@code{icase_path}(boolean)}
		Ignore case distinctions in the path.
		Suffixes check is affected by this capability.
	@item{@code{langmap}(comma separated list)}
		Language mapping. Each comma-separated map consists of
		the language name, a colon, and a list of file extensions.
		As a special exception, @name{gtags} collects values from multiple @code{langmap} variables.
		Default mapping is 'c:.c.h,yacc:.y,asm:.s.S,java:.java,cpp:.c++.cc.cpp.cxx.hxx.hpp.C.H,php:.php.php3.phtml'.
	@item{@code{gtags_parser}(comma separated list)}
		Specify the mapping of funtion layer plugin parser.
		Each part delimited by the comma consists of the language name, a colon,
		the shared object path, an optional colon followed by a function name.
		If the function name is not specified, 'parser' is assumed.
		As a special exception, @name{gtags} collects values from multiple @code{gtags_parser} variables.
	@item{@code{skip}(comma separated list)}
		@name{Gtags} skips files which are listed in this list.
		As a special exception, @name{gtags} collects values from multiple @code{skip} variables.
		If the value ends with '/', it is assumed as a directory and @name{gtags} skips all files under it.
		If the value starts with '/', it is assumed a relative path from the root of source directory.
	@end_itemize
@DIAGNOSTICS
	@name{Gtags} exits with a non 0 value if an error occurred, 0 otherwise.
@SEE ALSO
	@xref{global,1},
	@xref{htags,1}.

        GNU GLOBAL source code tag system@br
        (http://www.gnu.org/software/global/).
@BUG
	@file{GTAGS} and @file{GRTAGS} are very large.
	In advance of using this command, check the space of your disk.

	Assembly support is far from complete.
	It extracts only ENTRY() and ALTENTRY() from source file.
	Probably valid only for FreeBSD and Linux kernel source.

	There is no concurrency control about tag files.
@AUTHOR
	Shigio YAMAGUCHI, Hideki IWAMOTO and others.
@HISTORY
	The @name{gtags} command appeared in FreeBSD 2.2.2.
